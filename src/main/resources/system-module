Function CellsChanged(ByVal cell As Range, target_cells() As Variant) As Boolean
    CellsChanged = False
    For index = LBound(target_cells) To UBound(target_cells)
        If CellChanged(cell, target_cells(index)) Then
            CellsChanged = True
            Exit For
        End If
    Next index
End Function

Function CellChanged(ByVal cell As Range, ByVal target As Range) As Boolean
    CellChanged = Not Intersect(cell, target) Is Nothing
End Function

Function arrayjoin(a As Variant, delimiter As String, Optional ByVal ignoreEmpty As Boolean = False) As String
    Dim y As Variant

    If TypeOf a Is Range Then
        For Each y In a.Cells
            If ignoreEmpty = False Or y.Value2 <> "" Then
                arrayjoin = arrayjoin & y.Value2 & delimiter
            End If
        Next y
    ElseIf IsArray(a) Then
        For Each y In a
            If ignoreEmpty = False Or y <> "" Then
                arrayjoin = arrayjoin & y & delimiter
            End If
        Next y
    ElseIf ignoreEmpty = False Or a <> "" Then
        arrayjoin = arrayjoin & a & delimiter
    End If

    If TypeName(a) = "Error" Then
        arrayjoin = CVErr(xlErrNA)
    Else
        ' fill for no values to avoid error below
        arrayjoin = IIf(arrayjoin = "", delimiter, arrayjoin)

        arrayjoin = Left(arrayjoin, Len(arrayjoin) - Len(delimiter))
    End If
End Function

Function cellvalue(data As Range, row As String, column As String) As Variant
    Dim r, c As Range
    Set r = data.Find(row, SearchOrder:=xlByColumns)
    Set c = data.Find(column, SearchOrder:=xlByRows)
    If Not r Is Nothing And Not c Is Nothing Then
        cellvalue = Cells(r.row, c.column)
    End If
End Function

